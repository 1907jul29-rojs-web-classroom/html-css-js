JavaScript:
- This is not Java
- It is a programming language.
- Majorly used for client-side interaction (interaction with webpages) and also for 
    some server side interation.
- It is loosely typed language, because variables can hold any type of the value.
- It is Dynamically typed. It means we can also assign some value to a variable while executing a program.
- JavaScript is interpreted. Means it runs code line by line.


Where do you run JavaScript programs?
- Any programming language requires environment/runtime (Program) to execute/run.
- For JavaScript we need Browser with JS Engine
- IE/Edge -> Chakra
- Mozilla- > Spider Monkey
- Chrome -> V8 Engine

History : 
- LiveScript- first name
- JavaScript - named it to make it as popular as Java
- ECMAScript
- ES5, ES6 -> ECMAScript 2015, ES9......

What JavaScript can do?
- Manipulate DOM (HTML): Eg create or remove html elements on fly
- Manipulate design : change CSS 
- Add behavior to web page : Animations, graphics etc....
- Call server programs with JavaScript
- interact with files
- You can store some values to client's machine (cache, cookies, localstorage, session storage)
- we can use Browser (Geolocation, Storage, DOM Api, Drag and Drop) or 3rd party APIs (Google Maps Api) with JS

How we can apply JavaScript to a web page?
- Inline : using event names . Eg: onclick, onchange, onblur....
- Internal : using <Script></Script> tag and writing JS in the tag
- External :using .js file for external JS and linking to the html using <Script src="path of the JS file"></Script>
    This also make JS resuable for any other webpages.
*It is always a best practise to keep JS at the end of the <body></body> tag* (for external and internal JS)

Events: Any action/user-defined action is called an event. Eg: mouse click, hover, page load etc....

Variables : it is a placeholder to store any value. This value can be changed and in JS variables can have 
value of any type, this is why we call JS as loosely typed. Eg: name ="Pushpinder Kaur"

Constants : These are the values as well types which never change. Eg: pi = 3.14 

● Operators : 
    Expressions : Operands and Operators 
    Eg:1+2=3
    LHS: 1 and 2 are operands, + is the operator.
    RHS : Result

    In JS there are different types of Operators:
        1. Arithmatic Operators : Binary->[+, -, *, /, % (modulus-> gives remainder )], 
            Eg: 1+7=8
                a*b
            Unary-> which is applied on single constant or variable
               -a
               ++a (pre-increment) a = a+1;
               a++ (post-increment)            
        2. Logical Operators
            Logical AND, OR, NOT, XOR, NOR...... Output based on Truth Table
        3. Assignment Operators
            = equals to
            += 
            *=
            -=
            /=
        4. Comparison Operators
            >,<,>=,<=,==,===(strict equality)
        5. Conditional Operators / ternary operator
            (condition)?true:false
            1>2?hello:world

● Truth Tables
● Conditionals : to check one or more conditions conditional statements are used
    1. if
    2. if-else
    3. else-if
    4. switch
● Functions :
    - Named Functions
    - Functions with Parameters
    - Function which returns types
    - Anonymous Functions
    - Arrow Functions
    - Callback Functions
● Debugger Breakpoints in Devtools : As per Windows platform
    - Step Over - F10
    - Step In - F11
    - Step Out - Shift + F1
● Scopes : https://developer.mozilla.org/en-US/docs/Glossary/Scope
● Loops: for, while, do-while : https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Looping_code
● Arrays : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array
● Objects : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer
● Introduction to DOM Manipulation :
● Introduction to Event Handling
● Implement Bubblesort 